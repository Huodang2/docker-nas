#https://composerize.com/
version: '3.7'
networks:
    backend:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.enable_icc: "true"
            com.docker.network.bridge.enable_ip_masquerade: "true"
            com.docker.network.bridge.host_binding_ipv4: 0.0.0.0
            com.docker.network.bridge.name: "backend"
            com.docker.network.driver.mtu: 1500
        ipam:
            driver: default
            config:
                - subnet: 172.33.0.0/16
services:
    nginx:
        container_name: nginx
        volumes:
            - "${PERSISTENT_ROOT}/docker-templates/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
            - "${PERSISTENT_ROOT}/docker-templates/nginx/sites:/etc/nginx/templates:ro"
#            - "${PERSISTENT_ROOT}/docker-data/nginx/sites:/etc/nginx/templates:ro"
            - "${PERSISTENT_ROOT}/docker-data/nginx/logs:/etc/nginx/logs"
            - "${PERSISTENT_ROOT}/docker-data/letsencrypt:/etc/letsencrypt"
            - "${PERSISTENT_ROOT}/docker-data/certbot:/var/www/certbot"
        networks:
            - backend
        environment:
            - ROOT_DOMAIN
            - OCTOPRINT_PATH
        ports:
            - '443:443/tcp'
            - '80:80/tcp'

        restart: always
        image: 'nginx:latest'
    autoheal:
        container_name: autoheal
        restart: always
        image: willfarrell/autoheal
        environment:
            - AUTOHEAL_CONTAINER_LABEL=all
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
